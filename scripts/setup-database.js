// Script para configurar o banco de dados automaticamente
// Execute este arquivo no console do navegador ou como script Node.js

import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = 'https://ldujhtwxnbwqbchhchcf.supabase.co';
const SUPABASE_KEY = 'SUA_CHAVE_AQUI'; // Substitua pela sua chave

async function setupDatabase() {
  const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);
  
  console.log('üöÄ Iniciando configura√ß√£o do banco de dados...');
  
  try {
    // 1. Verificar se a tabela existe
    const { data: tables, error: tableError } = await supabase
      .from('palavras')
      .select('id')
      .limit(1);
    
    if (tableError && tableError.code === '42P01') {
      console.log('‚ùå Tabela "palavras" n√£o encontrada. Execute o SQL do arquivo database_setup.sql primeiro!');
      return false;
    }
    
    // 2. Verificar estat√≠sticas atuais
    const { count } = await supabase
      .from('palavras')
      .select('*', { count: 'exact', head: true });
    
    console.log(`üìä Palavras atuais no banco: ${count || 0}`);
    
    // 3. Testar cache local
    try {
      if (typeof window !== 'undefined' && window.indexedDB) {
        console.log('‚úÖ IndexedDB dispon√≠vel - Cache local funcionar√°');
      } else {
        console.log('‚ö†Ô∏è  IndexedDB n√£o dispon√≠vel - Cache local n√£o funcionar√°');
      }
    } catch (e) {
      console.log('‚ö†Ô∏è  Erro ao verificar IndexedDB:', e.message);
    }
    
    // 4. Verificar √≠ndices (se poss√≠vel)
    console.log('‚úÖ Conex√£o com Supabase estabelecida com sucesso');
    
    // 5. Exemplo de como inserir palavras de teste
    if (count === 0) {
      console.log('üìù Banco vazio. Inserindo palavras de exemplo...');
      
      const palavrasExemplo = [
        { texto: 'Pel√©', categoria: 'pessoas-famosas', dificuldade: 'facil' },
        { texto: 'Paris', categoria: 'lugares', dificuldade: 'facil' },
        { texto: 'Cachorro', categoria: 'animais', dificuldade: 'facil' },
        { texto: 'Leonardo da Vinci', categoria: 'pessoas-famosas', dificuldade: 'medio' },
        { texto: 'Machu Picchu', categoria: 'lugares', dificuldade: 'medio' },
        { texto: 'Ornitorrinco', categoria: 'animais', dificuldade: 'dificil' }
      ];
      
      const { data, error } = await supabase
        .from('palavras')
        .insert(palavrasExemplo);
      
      if (error) {
        console.log('‚ùå Erro ao inserir palavras de exemplo:', error.message);
      } else {
        console.log('‚úÖ Palavras de exemplo inseridas com sucesso!');
      }
    }
    
    console.log('üéâ Configura√ß√£o do banco conclu√≠da!');
    return true;
    
  } catch (error) {
    console.error('‚ùå Erro durante configura√ß√£o:', error);
    return false;
  }
}

// Para executar no browser
if (typeof window !== 'undefined') {
  window.setupDatabase = setupDatabase;
  console.log('üí° Execute setupDatabase() no console para configurar o banco');
}

// Para executar no Node.js
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { setupDatabase };
}

export { setupDatabase };
